mail <- read_csv('mail_order.csv')
library(data.table)
mail <- read_csv('mail_order.csv')
?read_csv
??read_csv
library(readr)
mail <- read_csv('mail_order.csv')
library(data.table)
mail <- fread('mail_order.csv')
mail
hist(mail$purchase)
source('C:/Users/asd/Desktop/데이터 사이언스/SNU/고객관계관리/mail_order_analysis.R', echo=TRUE)
barplot(mail$purchase) # unbalanced
count(mail$purchase) # unbalanced
hist(mail$purchase) # unbalanced
str(mail)
mail$purchase <- as.factor(mail$purchase)
hist(mail$purchase) # unbalanced
str(mail)
barplot(mail$purchase) # unbalanced
ggplot(mail, aes(x=purchase)) + geom_bar() # unbalanced
?sample
train_idx <- sample_frac(mail, 0.5, replace = FALSE)
train_idx
train <- sample_frac(mail, 0.5, replace = FALSE)
tail(mail)
train_idx <- sample.int(1:4000, 2000, replace = FALSE)
train_idx <- sample.int(4000, 2000, replace = FALSE)
train_idx
length(unique(train_idx))
train <- mail[train_idx,]
test <- mail[!train_idx,]
train
ggplot(train, aes(x=purchase)) + geom_bar()
ggplot(test, aes(x=purchase)) + geom_bar()
install.packages("randomForest")
library(randomForest)
?randomForest
train[,-1]
train
train[,-c(1,7)]
randomForest(train[,-c(1,7)], train[,7], ntree = 100, maxnodes = 6, importance = TRUE)
mail$gender <- as.factor(mail$gender)
train_idx <- sample.int(4000, 2000, replace = FALSE)
train <- mail[train_idx,]
test <- mail[!train_idx,]
ggplot(train, aes(x=purchase)) + geom_bar()
ggplot(test, aes(x=purchase)) + geom_bar()
randomForest(train[,-c(1,7)], train[,7], ntree = 100, maxnodes = 6, importance = TRUE)
train[,7]
randomForest(x = train[,-c(1,7)], y = train[,7], ntree = 100, maxnodes = 6, importance = TRUE)
randomForest(x = train[,-c(1,7)], y = train[,7], ntree = 100, importance = TRUE)
randomForest(x = train[,-c(1,7)], y = train[,7], ntree = 100)
length(train[,-c(1,7)])
length(train[,-7])
length(train[,7])
randomForest(purchse ~ gender+monetary+recency+frequency+duration, ntree = 100, maxnodes = 6, importance = TRUE)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, ntree = 100, maxnodes = 6, importance = TRUE)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train, ntree = 100, maxnodes = 6, importance = TRUE)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = mail,
ntree = 1000, maxnodes = 5, importance = TRUE)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
ntree = 1000, maxnodes = 5, importance = TRUE)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
xtest = test[,-c(1,7)], ytest = test[,7], ntree = 1000, maxnodes = 5, importance = TRUE)
test[,7]
is.factor(test[,7])
mail
mail$purchase <- as.factor(mail$purchase)
mail$gender <- as.factor(mail$gender)
ggplot(mail, aes(x=purchase)) + geom_bar() # unbalanced
train_idx <- sample.int(4000, 2000, replace = FALSE)
train <- mail[train_idx,]
test <- mail[!train_idx,]
ggplot(train, aes(x=purchase)) + geom_bar()
ggplot(test, aes(x=purchase)) + geom_bar()
is.factor(test[,7])
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
xtest = test[,-c(1,7)], ytest = as.factor(test[,7]), ntree = 1000, maxnodes = 5, importance = TRUE)
as.factor(test[,7])
test$purchase <- as.factor(test$purchase)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
xtest = test[,-c(1,7)], ytest = test[,7], ntree = 1000, maxnodes = 5, importance = TRUE)
is.factor(test[,7])
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000, maxnodes = 5, importance = TRUE)
train1 <- train %>%
filter(purchase == 1)
train1
Btrain <- train1
for (i in 1:10){
Btrain <- bind_rows(Btrain, train1)
}
Btrain
Ntrain <- bind_rows(train, Btrain)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = Ntrain,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 5, importance = TRUE)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 5, importance = TRUE)
train1 <- train %>%
filter(purchase == 1)
Btrain <- train1
for (i in 1:8){
Btrain <- bind_rows(Btrain, train1)
}
Ntrain <- bind_rows(train, Btrain)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = Ntrain,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 5, importance = TRUE)
(1361+81)/(1361+468+90+81)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 5, importance = TRUE)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = Ntrain,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 5, importance = TRUE)
Btrain <- train1
for (i in 1:10){
Btrain <- bind_rows(Btrain, train1)
}
Ntrain <- bind_rows(train, Btrain)
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = Ntrain,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 5, importance = TRUE)
110/(171)
ggplot(Ntrain, aes(x=purchase)) + geom_bar()
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = train,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 7, importance = TRUE)
?rnorm
ncol(train1)
nrow(train1)
matrix(rnorm(154*7), 154, 7)
Btrain <- train1
train1
for (i in 1:10){
rand.mat <- matrix(rnorm(154*7), 154, 7)
random_train <- train1[,-c(1,7)]
Btrain <- bind_rows(Btrain, random_train)
}
Ntrain <- bind_rows(train, Btrain)
Btrain
tail(Btrain)
Btrain <- train1
for (i in 1:10){
train1B <- train1
rand.mat <- matrix(rnorm(154*7), 154, 7)
random_train <- train1B[,-c(1,7)] + rand.mat
train1B[, -c(1,7)] <- random_train
Btrain <- bind_rows(Btrain, train1B)
}
train1B <- train1
rand.mat <- matrix(rnorm(154*7), 154, 7)
random_train <- train1B[,-c(1,7)] + rand.mat
random_train <- as.matrix(train1B[,-c(1,7)]) + rand.mat
summary(train1B)
train1B <- train1
rand.mat <- matrix(rnorm(154*4), 154, 4)
random_train <- as.matrix(train1B[,-c(1,2,7)]) + rand.mat
train1B[, -c(1,2,7)] <- random_train
Btrain <- bind_rows(Btrain, train1B)
Btrain
Btrain <- train1
Btrain <- bind_rows(Btrain, train1B)
Btrain
tail(Btrain)
Btrain <- train1
for (i in 1:10){
train1B <- train1
rand.mat <- matrix(rnorm(154*4), 154, 4)
random_train <- as.matrix(train1B[,-c(1,2,7)]) + rand.mat
train1B[, -c(1,2,7)] <- random_train
Btrain <- bind_rows(Btrain, train1B)
}
Ntrain <- bind_rows(train, Btrain)
ggplot(Ntrain, aes(x=purchase)) + geom_bar()
randomForest(purchase ~ gender+monetary+recency+frequency+duration, data = Ntrain,
xtest = test[,-c(1,7)], ytest = test$purchase, ntree = 1000,
maxnodes = 5, importance = TRUE)
