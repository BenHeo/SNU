arrange(desc(est_num_alive)) %>%
head(25)
?n
?arrange
com_fem <- BabynamesDist %>%
filter(sex == "F") %>%
group_by(name) %>%
summarise(
N = n(), est_num_alive = sum(est_alive_today),
q1_age = wtd.quantile(age_today, est_alive_today, probs = 0.25),
median_age = wtd.quantile(age_today, est_alive_today, probs = 0.5),
q3_age = wtd.quantile(age_today, est_alive_today, probs = 0.75)) %>%
arrange(desc(est_num_alive)) %>%
head(25)
# est_num_alive==0 인것 먼저 제외하고 다시 하기.
anti_names <- BabynamesDist %>%
filter(sex == "F") %>%
group_by(name) %>%
summarise(est_num_alive=sum(est_alive_today)) %>%
filter(est_num_alive==0)%>%
select(name)
com_fem <- BabynamesDist %>%
anti_join(anti_names, by="name") %>%
filter(sex == "F") %>%
group_by(name) %>%
summarise(
N = n(), est_num_alive = sum(est_alive_today),
q1_age = wtd.quantile(age_today, est_alive_today, probs = 0.25),
median_age = wtd.quantile(age_today, est_alive_today, probs = 0.5),
q3_age = wtd.quantile(age_today, est_alive_today, probs = 0.75)) %>%
arrange(desc(est_num_alive)) %>%
head(25)
?reorder
require(graphics)
bymedian <- with(InsectSprays, reorder(spray, count, median))
InspectsPrays
InspectSprays
InsectSprays
bymedian
head(com_fem)
# binding the data, defining the x and y aesthetics, title, labels
w_plot <- ggplot(
data = com_fem,
aes(x = reorder(name, -median_age),  y = median_age)
) +
xlab(NULL) +
ylab("Age (in years)") +
ggtitle("Median ages for females with the 25 most common names")
w_plot
reorder(com_fem$name, -comf_fem$median_age)
reorder(com_fem$name, -com_fem$median_age)
# gold rectangles, points, flip
w_plot +
geom_linerange(
aes(ymin = q1_age, ymax = q3_age),
color = "#f3d478",
size = 5,
alpha = 0.7
) +
geom_point(fill = "#ed3324", colour = "white", size = 4, shape = 21) +
coord_flip()
w_plot <- ggplot(
data = com_fem,
aes(x = reorder(name, -median_age),  y = median_age)
) +
xlab(NULL) +
ylab("Age (in years)") +
ggtitle("Median ages for females with the 25 most common names")
# gold rectangles, points, flip
w_plot +
geom_linerange(
aes(ymin = q1_age, ymax = q3_age),
color = "#f3d478",
size = 3,
alpha = 0.7
) +
geom_point(fill = "#ed3324", colour = "white", size = 4, shape = 21) +
coord_flip()
# binding the data, defining the x and y aesthetics, title, labels
w_plot <- ggplot(
data = com_fem,
aes(x = reorder(name, -median_age),  y = median_age)
) +
xlab(NULL) +
ylab("Age (in years)") +
ggtitle("Median ages for females with the 25 most common names")
# gold rectangles, points, flip
w_plot +
geom_linerange(
aes(ymin = q1_age, ymax = q3_age),
color = "#f3d478",
size = 5,
alpha = 0.7
) +
geom_point(fill = "#ed3324", colour = "white", size = 4, shape = 21) +
coord_flip()
# binding the data, defining the x and y aesthetics, title, labels
w_plot <- ggplot(
data = com_fem,
aes(x = reorder(name, -median_age),  y = median_age)
) +
xlab(NULL) +
ylab("Age (in years)") +
ggtitle("Median ages for females with the 25 most common names")
# gold rectangles, points, flip
w_plot +
geom_linerange(
aes(ymin = q1_age, ymax = q3_age),
color = "#f3d478",
size = 5,
alpha = 0.7
) +
geom_point(fill = "#ed3324", colour = "white", size = 4, shape = 21)
# initial ggplot2 object
name_plot <- ggplot(data = joseph, aes(x = year)) #aes : 색상, 크기 등 외적 요소
name_plot
name_plot +
geom_bar(stat = "identity", aes(y = count_thousands * alive_prob),
fill = "#b2d7e9", colour = "white") #adds bars, geom : 점,선,모양 등 기하학적 요소
?geom_bar
name_plot
# add the bars
name_plot <- name_plot +
geom_bar(stat = "identity", aes(y = count_thousands * alive_prob),
fill = "#b2d7e9", colour = "white") #adds bars, geom : 점,선,모양 등 기하학적 요소
name_plot
head(joseph)
# add the labels
name_plot <- name_plot +
ylab("Number of People (thousands)") + xlab(NULL) #add labels
# computes the median year
#install.packages("Hmisc")
library(Hmisc)
max(joseph$est_alive_today)
# overplot a single bar in a darker shade of blue
name_plot <- name_plot +
geom_bar(stat = "identity", colour = "white", fill = "#008fd5",
aes(y = ifelse(year == median_yob, est_alive_today / 1000, 0)))
name_plot
# contain many contextual elements
name_plot +
ggtitle("Age Distribution of American Boys Named Joseph") +
geom_text(x = 1935, y = 40, label = "Number of Josephs\nborn each year") +
geom_text(x = 1915, y = 13, label =
"Number of Josephs\nborn each year\nestimated to be alive\non 1/1/2014",
colour = "#b2d7e9") +
geom_text(x = 2003, y = 40,
label = "The median\nliving Joseph\nis 37 years old",
colour = "darkgray") +
geom_curve(x = 1995, xend = 1974, y = 40, yend = 24,
arrow = arrow(length = unit(0.3,"cm")), curvature = 0.5) + ylim(0, 42)
# obtain an analogous plot for another name
Josephine <- filter(BabynamesDist, name == "Josephine" & sex == "F")
name_plot %+% Josephine # Can use Josephine instead of Joseph
# compare the gender breakdown for a few of the most common of these
many_names_plot <- name_plot + facet_grid(name ~ sex)
many_names_plot
mnp <- many_names_plot %+% filter(BabynamesDist, name %in%
c("Jessie", "Marion", "Jackie"))
mnp
library(Hmisc)
library(mdsr)
library(babynames)
BabynamesDist <- make_babynames_dist()
head(BabynamesDist, 2)
com_fem <- BabynamesDist %>%
filter(sex == "F") %>%
group_by(name) %>%
summarise(
N = n(), est_num_alive = sum(est_alive_today),
q1_age = wtd.quantile(age_today, est_alive_today, probs = 0.25),
median_age = wtd.quantile(age_today, est_alive_today, probs = 0.5),
q3_age = wtd.quantile(age_today, est_alive_today, probs = 0.75)) %>%
arrange(desc(est_num_alive)) %>%
head(25)
com_fem
View(com_fem)
# binding the data, defining the x and y aesthetics, title, labels
w_plot <- ggplot(
data = com_fem,
aes(x = reorder(name, -median_age),  y = median_age)
) +
xlab(NULL) +
ylab("Age (in years)") +
ggtitle("Median ages for females with the 25 most common names")
w_plot
# gold rectangles, points, flip
w_plot +
geom_linerange(
aes(ymin = q1_age, ymax = q3_age),
color = "#f3d478",
size = 5,
alpha = 0.7
) +
geom_point(fill = "#ed3324", colour = "white", size = 4, shape = 21) +
coord_flip()
head(com_fem)
head(BabynamesDist)
binding the data, defining the x and y aesthetics, title, labels
w_plot <- ggplot(
data = com_fem,
aes(x = reorder(name, -median_age),  y = median_age)
) +
xlab(NULL) +
ylab("Age (in years)") +
ggtitle("Median ages for females with the 25 most common names")
# gold rectangles, points, flip
w_plot +
geom_linerange(
aes(ymin = q1_age, ymax = q3_age),
color = "#f3d478",
size = 5,
alpha = 0.7
) +
geom_point(fill = "#ed3324", colour = "white", size = 4, shape = 21)
# gold rectangles, points, flip
w_plot +
geom_linerange(
aes(ymin = q1_age, ymax = q3_age),
color = "#f3d478",
size = 5,
alpha = 0.7
) +
geom_point(fill = "#ed3324", colour = "white", size = 4, shape = 21) +
coord_flip()
# babynames dataset
library(dplyr)
library(babynames)
head(babynames, 2)
# scan the data
babynames %>%
filter(name == "Jackie")
#group_by function
babynames %>%
filter(name == "Jackie") %>%
group_by(year)
#summarise function
babynames %>%
filter(name == "Jackie") %>%
group_by(year) %>%
summarise(
N = n(),
total = sum(n),
boys = sum(ifelse(sex == "M", n, 0))
)
# Exercise
babynames %>%
filter(name == "Jackie") %>%
group_by(year) %>%
summarise(
N = n(),
total = sum(n),
boys = sum(ifelse(sex == "M", n, 0))
)%>%
mutate(pp = abs(0.5-boys/total)) %>% arrange(pp)
# Exercise
babynames %>%
filter(name == "Jackie") %>%
group_by(year) %>%
summarise(
N = n(),
total = sum(n),
boys = sum(ifelse(sex == "M", n, 0))
)%>%
mutate(pp = abs(0.5-boys/total)) %>% arrange(pp) %>%
head(10)
#install.packages("Lahman")
library(Lahman)
library(dplyr)
#help("Lahman-package") #check the Sean Lahman’s Baseball Database
# Manny Ramirez in the Batting table
manny <- filter(Batting, playerID == "ramirma02")
install.packages("Lahman")
library(Lahman)
library(dplyr)
#help("Lahman-package") #check the Sean Lahman’s Baseball Database
# Manny Ramirez in the Batting table
manny <- filter(Batting, playerID == "ramirma02")
help("Lahman-package")
filter(Batting, playerID == "ramirma02")
filter(Master, playerID == "ramirma02")
# Manny's total career
manny %>% summarize(
span = paste(min(yearID), max(yearID), sep = "-"),
numYears = n_distinct(yearID), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)
# Manny's total career
manny %>% summarize(
span = paste(min(yearID), max(yearID), sep = "-"),
numYears = n_distinct(yearID), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)
# Manny's total career
manny %>% summarize(
span = paste(min(yearID), max(yearID), sep = "-"),
numYears = n_distinct(yearID), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)
# Manny Ramirez in the Batting table
manny <- filter(Batting, playerID == "ramirma02")
# Manny's total career
manny %>% summarize(
span = paste(min(yearID), max(yearID), sep = "-"),
numYears = n_distinct(yearID), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)
library(dplyr)
# Manny Ramirez in the Batting table
manny <- filter(Batting, playerID == "ramirma02")
# Manny's total career
manny %>% summarize(
span = paste(min(yearID), max(yearID), sep = "-"),
numYears = n_distinct(yearID), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)
head(manny)
# Manny's total career
manny %>% dplyr::summarize(
span = paste(min(yearID), max(yearID), sep = "-"),
numYears = n_distinct(yearID), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)
?summarize
# This player ID is known as a key in the Master table
Master %>%
filter(nameLast  == "Ramirez" & nameFirst == "Manny")
# His carrer, age in each year
Batting   %>%
filter(playerID  == "ramirma02") %>%
inner_join(Master, by = c("playerID"  = "playerID"))  %>%
group_by(yearID) %>%
summarize(
Age = max(yearID - birthYear), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)   %>%
arrange(yearID)
# His carrer, age in each year
Batting   %>%
filter(playerID  == "ramirma02") %>%
inner_join(Master, by = c("playerID"  = "playerID"))  %>%
group_by(yearID) %>%
dplyr::summarize(
Age = max(yearID - birthYear), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)   %>%
arrange(yearID)
# Which season was Ramirez’s best as a hitter?
mannyBySeason <- Batting %>%
filter(playerID == "ramirma02") %>%
inner_join(Master, by = c("playerID"  = "playerID")) %>%
group_by(yearID) %>%
dplyr::summarize(
Age = max(yearID - birthYear), numTeams = n_distinct(teamID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI),
OBP = sum(H + BB + HBP) / sum(AB + BB + SF + HBP),
SLG = sum(H + X2B + 2*X3B + 3*HR) / sum(AB)
) %>%
mutate(OPS   = OBP + SLG) %>%
arrange(desc(OPS))
mannyBySeason
# leage average OPS in each year
mlb <- Batting %>%
filter(yearID %in% 1993:2011) %>%
group_by(yearID) %>%
summarize(lgOPS =
sum(H + BB + HBP, na.rm = TRUE) / sum(AB + BB + SF + HBP, na.rm = TRUE)  +
sum(H + X2B + 2*X3B  + 3*HR,  na.rm = TRUE)  / sum(AB,  na.rm = TRUE))
# leage average OPS in each year
mlb <- Batting %>%
filter(yearID %in% 1993:2011) %>%
group_by(yearID) %>%
dplyr::summarize(lgOPS =
sum(H + BB + HBP, na.rm = TRUE) / sum(AB + BB + SF + HBP, na.rm = TRUE)  +
sum(H + X2B + 2*X3B  + 3*HR,  na.rm = TRUE)  / sum(AB,  na.rm = TRUE))
mlb
# match the league average OPS values to the corresponding entries for Ramirez
mannyRatio <- mannyBySeason %>%
inner_join(mlb, by = c("yearID" = "yearID")) %>%
mutate(OPSplus = OPS / lgOPS) %>%
select(yearID, Age, OPS, lgOPS, OPSplus) %>%
arrange(desc(OPSplus))
mannyRatio
# Ramirez appears in the all-star games for 12 years.
mannyAllstar <- AllstarFull %>% filter(playerID == "ramirma02")
mannyAllstar
mannyBySeason
mannyBySeason %>%
left_join(mannyAllstar, by = c("yearID" = "yearID"))
# Excercise 1
row_number(manny)
# Excercise 1
nrow(manny)
manny
# Excercise 2
manny %>%
group_by(teamID) %>%
summarise(
span = paste(min(yearID), max(yearID), sep = "-"),
numYears = n_distinct(yearID),
BA = sum(H)/sum(AB), tH = sum(H), tHR = sum(HR), tRBI = sum(RBI)
)
mannyBySeason %>%
left_join(mannyAllstar, by = c("yearID" = "yearID")) %>%
nrow()
# Excercise 4
bonds <- Master %>%
filter(nameLast == "Barry", nameFirst == "Bonds")
bonds
# Excercise 4
bonds <- Master %>%
filter(nameFisrt == "Barry", nameLast == "Bonds")
# Excercise 4
bonds <- Master %>%
filter(nameFirst == "Barry", nameLast == "Bonds")
bonds
Batting %>%
filter(playerID == bonds$playerID)
Batting %>%
filter(playerID == bonds$playerID) %>%
summarise(
tHR = sum(HR)
)
Batting %>%
group_by(playerID) %>%
summarise(
tHR = sum(HR)
)
Batting %>%
group_by(playerID) %>%
summarise(
tHR = sum(HR)
) %>%
arrange(desc(tHR))
Batting %>%
group_by(playerID) %>%
summarise(
tHR = sum(HR)
) %>%
arrange(desc(tHR)) %>%
head(20)
head(Pitching)
# Excercise 5
Pitching %>%
group_by(playerID) %>%
summarise(
tW = sum(W),
tSO = sum(SO)
) %>%
filter(tW > 300, tSO > 3000)
# Excercise 5
Pitching %>%
group_by(playerID) %>%
summarise(
tW = sum(W),
tSO = sum(SO)
) %>%
filter(tW > 300, tSO > 3000) %>%
left_join(AllstarFull, by = c("playerID" = "playerID")) %>%
select(nameFirst, nameLast)
# Excercise 5
Pitching %>%
group_by(playerID) %>%
summarise(
tW = sum(W),
tSO = sum(SO)
) %>%
filter(tW > 300, tSO > 3000) %>%
left_join(AllstarFull, by = c("playerID" = "playerID"))
# Excercise 5
Pitching %>%
group_by(playerID) %>%
summarise(
tW = sum(W),
tSO = sum(SO)
) %>%
filter(tW > 300, tSO > 3000) %>%
left_join(Master, by = c("playerID" = "playerID")) %>%
select(nameFirst, nameLast)
# Excercise 6
AwardsPlayers %>% filter(awardID == "World Series MVP")
# Excercise 6
AwardsPlayers %>% filter(awardID == "World Series MVP") %>%
arrange(desc(yearID))
# Excercise 6
AwardsPlayers %>% filter(awardID == "World Series MVP") %>%
arrange(desc(yearID)) %>% head(10)
# Excercise 6
AwardsPlayers %>% filter(awardID == "World Series MVP") %>%
arrange(desc(yearID)) %>% head(10) %>%
left_join(Master, by = c("playerID" = "playerID")) %>%
select(playerID, awardID, yearID, nameFirst, nameLast, age)
head(Master)
# Excercise 6
AwardsPlayers %>% filter(awardID == "World Series MVP") %>%
arrange(desc(yearID)) %>% head(10) %>%
left_join(Master, by = c("playerID" = "playerID")) %>%
mutate(age = yearID - birthYear) %>%
select(playerID, awardID, yearID, nameFirst, nameLast, age)
BabynamesDist <- make_babynames_dist()
head(BabynamesDist, 2)
com_fem <- BabynamesDist %>%
filter(sex == "F") %>%
group_by(name) %>%
summarise(
N = n(), est_num_alive = sum(est_alive_today),
q1_age = wtd.quantile(age_today, est_alive_today, probs = 0.25),
median_age = wtd.quantile(age_today, est_alive_today, probs = 0.5),
q3_age = wtd.quantile(age_today, est_alive_today, probs = 0.75)) %>%
arrange(desc(est_num_alive)) %>%
head(25)
com_fem
