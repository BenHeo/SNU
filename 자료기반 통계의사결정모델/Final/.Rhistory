dat <- dat %>%
mutate(logMobil=log(Mobility))
flm.fit <- lm(logMobil~Population+Seg_poverty+Commute+Gini+Manufacturing+
Religious+Violent_crime+Single_mothers+Progressivity,
data=dat)
summary(flm.fit)
dat <- dat %>%
mutate(logMobil=log(Mobility))
flm.fit <- lm(logMobil~Population+Seg_poverty+Commute+Gini+Manufacturing+
Religious+Violent_crime+Single_mothers+Progressivity,
data=dat)
summary(flm.fit)
fcoeff <- summary(flm.fit)$coef
fvif <- vif(flm.fit)
fvif[fvif > 10]
fcoeff[,1:2]
dat <- dat %>%
mutate(logMobil=log(Mobility))
flm.fit <- lm(logMobil~Population+Seg_poverty+Commute+Gini+Manufacturing+
Religious+Violent_crime+Single_mothers+Progressivity,
data=dat)
summary(flm.fit)
fcoeff <- summary(flm.fit)$coef
fvif <- vif(flm.fit)
fvif[fvif > 10]
fcoeff[,1:2]
########################## 6 ########################
dat$pred <- predict(flm.fit)
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = pred)) +
scale_color_gradient()
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = Mobility)) +
scale_color_gradient()
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = logMobil)) +
scale_color_gradient()
dat$pred
flm.fit
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = exp(pred))) +
scale_color_gradient()
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = Mobility)) +
scale_color_gradient()
ggplot(dat, aes(x = Mobility, y = exp(pred))) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = logMobil, y = residual)) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = logMobil, y = exp(residual))) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = Mobility, y = exp(residual))) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = logMobil, y = residual)) + geom_point() + geom_smooth(method = "lm")
logMobil
ggplot(dat, aes(x = logMobil, y = pred)) + geom_point() + geom_smooth(method = "lm")
Pitts %>%
select(Mobility, pred)
dat <- dat %>%
mutate(logMobil=log(Mobility))
flm.fit <- lm(logMobil~Population+Seg_poverty+Commute+Gini+Manufacturing+
Religious+Violent_crime+Single_mothers+Progressivity,
data=dat)
summary(flm.fit)
fcoeff <- summary(flm.fit)$coef
fvif <- vif(flm.fit)
fvif[fvif > 10]
fcoeff[,1:2]
########################## 6 ########################
dat$pred <- predict(flm.fit)
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = exp(pred))) +
scale_color_gradient()
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = Mobility)) +
scale_color_gradient()
######################### 7 ########################
Pitts <- dat %>%
filter(State == "PA")
Pitts %>%
select(Mobility, pred)
Pitts %>%
select(Mobility, exp(pred))
dat$logpred <- predict(flm.fit)
dat$pred <- exp(dat$logpred)
dat$pred
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = pred)) +
scale_color_gradient()
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = Mobility)) +
scale_color_gradient()
Pitts %>%
select(Mobility, pred)
Pitts <- dat %>%
filter(State == "PA")
Pitts %>%
select(Mobility, pred)
bind_cols(double = Pitts$pred * exp(fcoeff["Violent_crime",1]*Pitts$Violent_crime),
halve = Pitts$pred / exp(fcoeff["Violent_crime",1]*Pitts$Violent_crime/2))
predict(flm.fit, Pitts[,names(flm.fit$coefficients)[-1]], level=0.95, interval="confidence")
exp(predict(flm.fit, Pitts[,names(flm.fit$coefficients)[-1]], level=0.95, interval="confidence"))
exp(predict(flm.fit, Pitts[,names(flm.fit$coefficients)[-1]], level=0.95, interval="prediction"))
dat <- dat %>%
mutate(residual = Mobility - pred)
g <- ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = (residual)))
g
g +
geom_label(data=tb5, aes(x = Longitude, y = Latitude, label=Name, fill = factor(group)), size = 5, parse = TRUE)
ggplot(dat, aes(x = Mobility, y = pred)) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = Mobility, y = residual)) + geom_point() + geom_smooth(method = "lm")
dat <- dat %>%
mutate(residual = Mobility - pred,
logres = logMobil - logpred)
dat <- dat %>%
mutate(residual = Mobility - pred,
logres = logMobil - logpred)
g <- ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = (residual)))
g
dat <- dat %>%
mutate(residual = Mobility - pred,
logres = logMobil - logpred)
g <- ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = (residual)))
g
top5 <- dat %>%
arrange(desc(residual)) %>%
head(5) %>%
mutate(group = 1)
bottom5 <- dat %>%
arrange(residual) %>%
head(5) %>%
mutate(group = 2)
tb5 <- bind_rows(top5, bottom5)
g +
geom_label(data=tb5, aes(x = Longitude, y = Latitude, label=Name, fill = factor(group)), size = 5, parse = TRUE)
ggplot(dat, aes(x = Mobility, y = pred)) + geom_point() + geom_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(glmnet)
library(car)
dat <- read.csv("mobility.csv")
apply(is.na(dat), 2, sum)
dat$State <- as.factor(dat$State) # factorization
dat$Urban <- as.factor(dat$Urban) # factorization
dat$Violent_crime[is.na(dat$Violent_crime)] <- 0
dat <- dat %>%
filter(!is.na(Mobility))
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = Mobility)) +
scale_color_gradient()
dat %>%
mutate(MobilityCat = ifelse(Mobility > 0.1, "high", "low")) %>%
filter(State != "HI", State != "AK") %>%
ggplot() + geom_point(aes(x = Longitude, y = Latitude, color = MobilityCat))+
scale_color_grey(start=0.1, end = 0.7)
lm.fit <- lm(Mobility~Population, data=dat)
ggplot(dat) + geom_point(aes(x=Population, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients # need log scale
lm.fit <- lm(Mobility~Income, data=dat)
ggplot(dat) + geom_point(aes(x=Income, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
lm.fit <- lm(Mobility~Seg_racial, data=dat)
ggplot(dat) + geom_point(aes(x=Seg_racial, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
lm.fit <- lm(Mobility~Share01, data=dat)
ggplot(dat) + geom_point(aes(x=Share01, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients # need log scale or remove outlier
lm.fit <- lm(Mobility~School_spending, data=dat)
ggplot(dat) + geom_point(aes(x=School_spending, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
lm.fit <- lm(Mobility~Violent_crime, data=dat)
ggplot(dat) + geom_point(aes(x=Violent_crime, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients # discrete
lm.fit <- lm(Mobility~Commute, data=dat)
ggplot(dat) + geom_point(aes(x=Commute, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
lm_appro <- lm(Mobility~.-ID-Name-State-Longitude-Latitude-HS_dropout-Student_teacher_ratio
, data=dat) # not appropriate or NA
# summary(lm_appro)
coeffs <- summary(lm_appro)$coef[,1:2]
coeffs
coeffs[c("Population", "Income", "Seg_racial", "Share01", "School_spending", "Violent_crime", "Commute"),]
vif_appro <- vif(lm_appro)
vif_appro[vif_appro > 10] # ridge or variable elimination
ggplot(dat) + geom_point(aes(x=Population, y=Mobility, color = Colleges)) +
scale_color_gradient(na.value = "red")
ggplot(dat) + geom_point(aes(x=Population, y=Mobility, color = Tuition)) +
scale_color_gradient(na.value = "red")
ggplot(dat) + geom_point(aes(x=Population, y=Mobility, color = Graduation)) +
scale_color_gradient(na.value = "red")
at[,c("Colleges", "Tuition", "Graduation")][is.na(dat[,c("Colleges", "Tuition", "Graduation")])] <- 0
ggplot(dat, aes(x = Mobility, y = pred)) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = logMobil, y = logpred)) + geom_point() + geom_smooth(method = "lm")
library(tidyverse)
library(glmnet)
dat <- read.csv("mobility.csv")
apply(is.na(dat), 2, sum)
dat$State <- as.factor(dat$State) # factorization
dat$Urban <- as.factor(dat$Urban) # factorization
dat$Violent_crime[is.na(dat$Violent_crime)] <- 0
dat <- dat %>%
filter(!is.na(Mobility))
################### 1 #########################
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = Mobility)) +
scale_color_gradient()
dat %>%
mutate(MobilityCat = ifelse(Mobility > 0.1, "high", "low")) %>%
filter(State != "HI", State != "AK") %>%
ggplot() + geom_point(aes(x = Longitude, y = Latitude, color = MobilityCat))+
scale_color_grey(start=0.1, end = 0.7)
#################### 2 #######################3
lm.fit <- lm(Mobility~Population, data=dat)
ggplot(dat) + geom_point(aes(x=Population, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients # need log scale
lm.fit <- lm(Mobility~Income, data=dat)
ggplot(dat) + geom_point(aes(x=Income, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
lm.fit <- lm(Mobility~Seg_racial, data=dat)
ggplot(dat) + geom_point(aes(x=Seg_racial, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
lm.fit <- lm(Mobility~Share01, data=dat)
ggplot(dat) + geom_point(aes(x=Share01, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients # need log scale or remove outlier
lm.fit <- lm(Mobility~School_spending, data=dat)
ggplot(dat) + geom_point(aes(x=School_spending, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
lm.fit <- lm(Mobility~Violent_crime, data=dat)
ggplot(dat) + geom_point(aes(x=Violent_crime, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients # discrete
lm.fit <- lm(Mobility~Commute, data=dat)
ggplot(dat) + geom_point(aes(x=Commute, y=Mobility)) +
geom_abline(intercept = lm.fit$coefficients[1], slope = lm.fit$coefficients[2], color = "pink", size = 2)
lm.fit$coefficients
################# 3 ###############################
lm_appro <- lm(Mobility~.-ID-Name-State-Longitude-Latitude-HS_dropout-Student_teacher_ratio
, data=dat) # not appropriate or NA
summary(lm_appro)
coeffs <- summary(lm_appro)$coef[,1:2]
coeffs
coeffs[c("Population", "Income", "Seg_racial", "Share01", "School_spending", "Violent_crime", "Commute"),]
library(car)
vif_appro <- vif(lm_appro)
vif_appro[vif_appro > 10] # ridge or variable elimination
################# 4 ############################
apply(is.na(dat[,c("Colleges", "Tuition", "Graduation")]), 2, sum)
ggplot(dat) + geom_point(aes(x=Population, y=Mobility, color = Colleges)) +
scale_color_gradient(na.value = "red")
ggplot(dat) + geom_point(aes(x=Population, y=Mobility, color = Tuition)) +
scale_color_gradient(na.value = "red")
ggplot(dat) + geom_point(aes(x=Population, y=Mobility, color = Graduation)) +
scale_color_gradient(na.value = "red")
dat[,c("Colleges", "Tuition", "Graduation")][is.na(dat[,c("Colleges", "Tuition", "Graduation")])] <- 0
dat <- dat %>%
mutate(HE = ifelse(Colleges == 0 & Tuition == 0 & Graduation ==0, 0, 1))
################### 5 ###########################
dat <- dat %>%
mutate(logMobil=log(Mobility))
flm.fit <- lm(logMobil~Population+Seg_poverty+Commute+Gini+Manufacturing+
Religious+Violent_crime+Single_mothers+Progressivity,
data=dat)
summary(flm.fit)
fcoeff <- summary(flm.fit)$coef
fvif <- vif(flm.fit)
fvif[fvif > 10]
fcoeff[,1:2]
########################## 6 ########################
dat$logpred <- predict(flm.fit)
dat$pred <- exp(dat$logpred)
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = pred)) +
scale_color_gradient()
ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = Mobility)) +
scale_color_gradient()
######################### 7 ########################
Pitts <- dat %>%
filter(State == "PA")
Pitts %>%
select(Mobility, pred)
bind_cols(double = Pitts$pred * exp(fcoeff["Violent_crime",1]*Pitts$Violent_crime),
halve = Pitts$pred / exp(fcoeff["Violent_crime",1]*Pitts$Violent_crime/2))
exp(predict(flm.fit, Pitts[,names(flm.fit$coefficients)[-1]], level=0.95, interval="confidence"))
exp(predict(flm.fit, Pitts[,names(flm.fit$coefficients)[-1]], level=0.95, interval="prediction"))
######################### 8 ########################
dat <- dat %>%
mutate(residual = Mobility - pred,
logres = logMobil - logpred)
g <- ggplot(dat) + geom_point(aes(x = Longitude, y = Latitude, color = (residual)))
top5 <- dat %>%
arrange(desc(residual)) %>%
head(5) %>%
mutate(group = 1)
bottom5 <- dat %>%
arrange(residual) %>%
head(5) %>%
mutate(group = 2)
tb5 <- bind_rows(top5, bottom5)
g +
geom_label(data=tb5, aes(x = Longitude, y = Latitude, label=Name, fill = factor(group)), size = 5, parse = TRUE)
######################### 9 ########################
ggplot(dat, aes(x = Mobility, y = pred)) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = logMobil, y = logpred)) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = Mobility, y = residual)) + geom_point() + geom_smooth(method = "lm")
ggplot(dat, aes(x = logMobil, y = logres)) + geom_point() + geom_smooth(method = "lm")
mmdat <- dat[,c("Middle_class", "Mobility")]
mmdat <- dat[,c("Middle_class", "Mobility")]
mmdat <- mmdat %>% filter(!is.na(Middle_class))
nlm.fit <- lm(Mobility~Middle_class, data = dat)
mmdat
nlm.fit <- lm(Mobility~Middle_class, data = mmdat)
summary(nlm.fit)
ggplot(dat, aes(Middle_class, Mobility)) + geom_point() +
geom_abline(intercept = nlm.fit$coefficients[1], slope = nlm.fit$coefficients[2], color = "red")
interval_conf <- predict(nlm.fit, interval = "confidence")
ggplot(mmdat, aes(Middle_class, Mobility)) + geom_point() +
geom_abline(intercept = nlm.fit$coefficients[1], slope = nlm.fit$coefficients[2], color = "red")
interval_conf <- predict(nlm.fit, interval = "confidence")
interval_pred <- predict(nlm.fit, interval = "prediction")
interval_conf
mmdat
mmdatinter <- bind_cols(mmdat, inerval_conf)
mmdatinter <- bind_cols(mmdat, interval_conf)
head(interval_conf)
mmdatinter <- bind_cols(mmdat, as.data.frame(interval_conf))
mmdatinter
ggplot(mmdatinter, aes(Middle_class, Mobility)) + geom_point() +
geom_line(aes(y=fit), color = "red")
ggplot(mmdatinter, aes(Middle_class, Mobility)) + geom_point() +
geom_line(aes(y=fit), color = "red")+
geom_line(aes(y=upr), color = "blue")
ggplot(mmdatinter, aes(Middle_class, Mobility)) + geom_point() +
geom_line(aes(y=fit), color = "red") +
geom_line(aes(y=upr), color = "blue") +
geom_line(aes(y=lwr), color = "green")
interval_conf == interval_pred
head(interval_conf)
head(interval_pred)
interval_pred[,2]
names(interval_pred) <-
mmdatinter <- bind_cols(mmdat, as.data.frame(interval_conf), pred_lwr = interval_pred[,2], pred_upr = interval_pred[,3])
ggplot(mmdatinter, aes(Middle_class, Mobility)) + geom_point() +
geom_line(aes(y=fit), color = "red") +
geom_line(aes(y=upr), color = "blue") +
geom_line(aes(y=lwr), color = "blue") +
geom_line(aes(y=pred_upr), color = "green") +
geom_line(aes(y=pred_lwr), color = "green")
library(boot)
boot.conf <- function(data, indices){
data <- data[indices,]
lm.fit <- lm(Mobility~Middle_class, data = data)
interval_conf <- predict(lm.fit, interval = "confidence")
}
boot.out <- boot(mmdat, boot.median, 100)
boot.out
boot.out <- boot(mmdat, boot.conf, 100)
boot.out
nrow(mmdat)
boot.conf <- function(data, indices){
data <- data[indices,]
lm.fit <- lm(Mobility~Middle_class, data = data)
interval_conf <- predict(lm.fit, interval = "confidence")
mean(interval_conf)
}
boot.out <- boot(mmdat, boot.conf, 100)
boot.out
interval_conf
boot.conf <- function(data, indices){
data <- data[indices,]
lm.fit <- lm(Mobility~Middle_class, data = data)
interval_conf <- predict(lm.fit, interval = "confidence")
interval_conf
}
boot.out <- boot(mmdat, boot.conf, 100)
boot.out
boot.conf <- function(data, indices){
data <- data[indices,]
lm.fit <- lm(Mobility~Middle_class, data = data)
interval_conf <- predict(lm.fit, interval = "confidence")
mean(interval_conf)
}
boot.out <- boot(mmdat, boot.conf, 100)
boot.out
boot.ci(boot.out, type = c("norm", "perc", "bca"))
boot.ci(boot.out, type = c("norm", "perc"))
boot.pred <- function(data, indices){
data <- data[indices,]
lm.fit <- lm(Mobility~Middle_class, data = data)
interval_pred <- predict(lm.fit, interval = "prediction")
mean(interval_pred)
}
boot.out <- boot(mmdat, boot.pred, 100)
boot.out
boot.ci(boot.out, type = c("norm", "perc"))
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 3, cv = TRUE)
ssfit
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 7, cv = TRUE)
ssfit
ssfit$cv.crit
k = 1
mostval = 0
for (i in 1:20){
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = i, cv = TRUE)
if (mostval < ssfit$cv.crit){
k = i
}
}
k
k = 1
mostval = 0
for (i in 1:100){
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = i, cv = TRUE)
if (mostval < ssfit$cv.crit){
k = i
}
}
k
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 100, cv = TRUE)
ssfit
ssfit$crit
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 5, cv = TRUE)
ssfit$crit
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 500, cv = TRUE)
ssfit$crit
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 7, cv = TRUE)
ssfit$crit
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, cv = TRUE)
ssfit
ssfit$x
ssfit$y
boot.ss <- function(data, indices){
data <- data[indices,]
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 5.056275)
mean(ssfit$y)
}
ssboot <- boot(mmdat, boot.ss, 100)
ssboot
boot.ci(ssboot, type = c("norm", "perc"))
boot.ci(ssboot, type = c("norm", "perc", "bca"))
ssfit <- smooth.spline(data$Middle_class, data$Mobility, df = 5.056275)
ssfit <- smooth.spline(mmdat$Middle_class, mmdat$Mobility, df = 5.056275)
plot(ssfit)
ssboot <- boot(mmdat, boot.ss, 20)
ssboot
boot.ci(ssboot, type = c("norm", "perc", "bca"))
boot.ss <- function(data, indices){
data <- data[indices,]
ssfit <- smooth.spline(data$Middle_class, data$Mobility, df = 5.056275)
ssfit$y
}
ssboot <- boot(mmdat, boot.ss, 20)
ssboot
ssboot <- boot(mmdat, boot.ss, 100)
boot.ss <- function(data, indices){
data <- data[indices,]
ssfit <- smooth.spline(data$Middle_class, data$Mobility, df = 5.056275)
mean(ssfit$y)
}
ssboot <- boot(mmdat, boot.ss, 100)
ssboot
boot.ci(ssboot, type = c("norm", "perc", "bca"))
boot.ci(ssboot, type = c("norm", "perc"))
ssboot$t0
ssboot$R
ssboot$data
ssboot$statistic()
ssboot$sim
ssboot$call
ssboot$stype
ssboot
plot(ssboot)
boot.ci(ssboot, type = c("perc"))
ssci <- boot.ci(ssboot, type = c("perc"))
ssci
ssci$percent
ssci$percent[4,5]
ssci$percent[c(4,5)]
ssci <- boot.ci(ssboot, type = c("perc"))$percent[c(4,5)]
ssci
ssboot + ssci
ssboot
ssfit + ssci
ssfit
ssfit$y + ssci
ssfit$y + ssci[1]
lwr = ssfit$y + ssci[1]
ssdf = bind_cols(x=ssfit$x, y=ssfit$y, lwr = ssfit$y - ssci[1], upr = ssfit$y + ssci[2])
ssdf
ggplot(ssdf, aes(x, y)) + geom_point()
ggplot(ssdf, aes(x, y)) + geom_point() + geom_line(aes(y=lwr), color = "blue") +
geom_line(aes(y=upr), color = "green")
ssci
lwr = ssci[1]
upr = ssci[2]
ssdf = bind_cols(x=ssfit$x, y=ssfit$y, lwr = ssfit$y - ssci[1], upr = ssfit$y + ssci[2])
ggplot(ssdf, aes(x, y)) + geom_point() + geom_line(aes(y=lwr), color = "blue") +
geom_line(aes(y=upr), color = "green")
ssdf = bind_cols(x=ssfit$x, y=ssfit$y, lwr =ssci[1], upr =  ssci[2])
ggplot(ssdf, aes(x, y)) + geom_point() + geom_line(aes(y=lwr), color = "blue") +
geom_line(aes(y=upr), color = "green")
ssci
plot(ssfit)
ssdf = bind_cols(x=ssfit$x, y=ssfit$y, lwr = ssfit$y * ssci[1], upr = ssfit$y * ssci[2])
ggplot(ssdf, aes(x, y)) + geom_point() + geom_line(aes(y=lwr), color = "blue") +
geom_line(aes(y=upr), color = "green")
ssdf = bind_cols(x=ssfit$x, y=ssfit$y, lwr = ssfit$y - ssci[1], upr = ssfit$y + ssci[2])
ggplot(ssdf, aes(x, y)) + geom_point() + geom_line(aes(y=lwr), color = "blue") +
geom_line(aes(y=upr), color = "green")
ggplot(mmdatinter, aes(Middle_class, Mobility)) + geom_point() +
geom_line(aes(y=fit), color = "red") +
geom_line(aes(y=upr), color = "blue") +
geom_line(aes(y=lwr), color = "blue") +
geom_line(aes(y=pred_upr), color = "green") +
geom_line(aes(y=pred_lwr), color = "green")
