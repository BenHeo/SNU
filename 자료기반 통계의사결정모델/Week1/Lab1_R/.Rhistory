#--- 1. Prussian horsekick data (p. 32)
k = c(0, 1, 2, 3, 4)
x = c(109 , 65, 22, 3, 1)
p = x / sum (x) # relative frequencies
print (p)
par ( mfrow = c(1 ,2)) #multiple graphs
barplot (x, names = k); pie(x)
r = sum (k * p) # mean
v = sum (x * (k - r)^2) / 199 # variance
f = dpois (k, r) #poisson density, 단위 시간당 죽음이 일어날 횟수에 대한 기대값이 r일때, k번 일어날 확률
print( cbind (k, p, f)) # 사망수, 실제 사망수 비율, 포아송 분포(기대값 0.61일때)로부터의 사망수 확률
# Example 1: plot, text and abline
par (mfrow = c(1 ,1))
x <- runif(50,0,2); y <- runif(50,0,2) #random sample in uniform(0,2) distribution
plot (x, y, main =" Main title ", sub =" subtitle ",
xlab ="x- label ", ylab ="y- label ")
abline (a = 0.5 , b = 1) #a: intercept, b : slope
abline (h = 0.5 , col = 'red ')
abline (v = 0.5 , col = " blue ")
text (0.5 ,0.6 , " text at x = 0.5 , y = 0.6 ")
plot (x, y, main =" Main title ", sub =" subtitle ",
xlab ="x- label ", ylab ="y- label ")
abline (a = 0.5 , b = 1) #a: intercept, b : slope
abline (h = 0.5 , col = 'red ')
abline (v = 0.5 , col = " blue ")
text (0.5 ,0.6 , " text at x = 0.5 , y = 0.6 ")
text (0.5 ,0.6 , " text at x = 0.5 , y = 0.6 ", col = 'white')
# Example 2: plot, text and lines
head ( USArrests )
attach ( USArrests )
plot ( Murder , Assault , pch = 20, col = " red ") #pch : plotting character
text ( Murder , Assault , rownames ( USArrests ), cex = 0.5) #cex : scaling of text
localregfit <- lowess ( Assault ~ Murder )
#lowess returns an object containing components x and y which give the coordinates of the smooth
#추세선 찾는 방법 중 하나.
lines ( localregfit $x, localregfit $y)
# Example 3: Print the rownames instead of symbols
plot ( Murder , Assault , type = "n")
text ( Murder , Assault , rownames ( USArrests ), cex = 0.5)
# Example 4: Scatterplot matrix for multi-variate data frame
plot( USArrests ) #or
pairs( USArrests )
# Example 4: Scatterplot matrix for multi-variate data frame
plot( USArrests ) #or
pairs( USArrests )
lines( USArrests)
# Example 4: Scatterplot matrix for multi-variate data frame
plot( USArrests ) #or
lines( USArrests)
pairs( USArrests )
lines( USArrests)
apply ( USArrests , 2, mean )
#library(ISwR)
lapply(thuesen, mean, na.rm=T)
library(ISwR)
install.packages("ISwR")
library(ISwR)
lapply(thuesen, mean, na.rm=T)
head(thuesen)
lapply(thuesen, mean, na.rm=T)
sapply ( thuesen , mean , na.rm=T)
is(energy$stature)
is(energy$expend)
?deparse
library(rmarkdown)
library(knitr)
plot(cars)
plot(cars)
?abline
