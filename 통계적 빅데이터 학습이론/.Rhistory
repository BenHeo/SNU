install.packages("ISLR")
library(ISLR)
?ISLR
??ISLR
sales
data(sales)
data(advertising)
lm.fit <- lm(sales ~ tv, data = advertising)
advertisizng = read.csv('advertising.csv')
advertisizng = read.csv('Advertising.csv')
lm.fit <- lm(sales ~ tv, data = advertising)
advertising = read.csv('Advertising.csv')
lm.fit <- lm(sales ~ tv, data = advertising)
summary(lm.fit)
head(advertising)
lm.fit <- lm(sales ~ TV, data = advertising)
summary(lm.fit)
source('C:/Users/renz/Desktop/SNU/통계적 빅데이터 학습이론/Ch03.linear_regression.R', echo=TRUE)
source('C:/Users/renz/Desktop/SNU/통계적 빅데이터 학습이론/Ch03_linear_regression.R', echo=TRUE)
advertising = read.csv('data/Advertising.csv')
lm.fit <- lm(sales ~ TV, data = advertising)
summary(lm.fit)
library(datasets)
library(MASS)
library(ISLR)
head(Credit)
lm.fit <- lm(balance~gender, Credit)
summary(lm.fit)
lm.fit <- lm(Balance~Gender, Credit)
summary(lm.fit)
head(Credit)
library(datasets)
library(MASS)
library(ISLR)
advertising = read.csv('data/Advertising.csv')
lm.fit <- lm(sales ~ TV, data = advertising)
summary(lm.fit)
head(advertising)
?read.csv
advertising = read.csv('data/Advertising.csv', row.names = FALSE)
lm.fit <- lm(sales ~ TV, data = advertising)
summary(lm.fit)
advertising = read.csv('data/Advertising.csv', row.names = NULL)
lm.fit <- lm(sales ~ TV, data = advertising)
summary(lm.fit)
head(advertising)
head(Credit)
lm.fit <- lm(Balance~Gender, Credit)
summary(lm.fit)
plot(lm.fit)
plot(Credit$Balance~Credit$Gender)
attach(Credit)
plot(Balance~Income)
plot(Balance~Income, col = Gender)
lm.fit <- lm(Balance~Income+Gender)
lm.fit$coefficients
mylm <- lm(Balance~.)
mylm <- lm(Balance~., data = Credit)
summary(mylm)
aic.credit <- stepAIC(mylm, direction = "both")
aic.credit
sumnmary(aic.credit)
summary(aic.credit)
plot(fitted(lm.fit))
library(ggplot2)
ing = read.csv("data/insurance.csv", header = T)
ing = read.csv("data/insurance/insurance.csv", header = T)
ing = ing[,-c(3,4)]
ing$clm = as.factor(ing$clm)
head(ing)
ggplot(data = ing, aes(exposure, veh_value)) + geom_point(alpha = 0.1, aes(color = clm))
nrow(ing)
load("data/AlzheimerDisease.RData_/AlzheimerDisease.Rdata")
head(predictors, n = 1)
library(ggplot2)
ing = read.csv("data/insurance/insurance.csv", header = T)
ing = ing[,-c(3,4)]
ing$clm = as.factor(ing$clm)
head(ing)
ggplot(data = ing, aes(exposure, veh_value)) + geom_point(alpha = 0.1, aes(color = clm))
load("data/AlzheimerDisease.RData_/AlzheimerDisease.Rdata")
head(predictors, n = 1)
head(Smarket)
library(ISLR)
head(Smarket)
pairs(Smarket)
glm.fit <- glm(Direction~Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = Smarket, family = binomial)
summary(glm.fit)
?glm
coef(glm.fit)
summary(glm.fit$coefficients)
summary(glm.fit)$coef
glm.probs <- predict(glm.fit, type = 'response')
glm.probs
glm.probs[1:10]
tail(glm.probs)
# lab 1
mpg <- read.csv("data/data/data/mpg.csv")
head(mpg)
is.na(mpg[1])
is.na(mpg[1,])
colSums(is.na(mpg))
mpg[mpg][1]
mpg[mpg]
mpg['mpg']
median(mpg$mpg)
library(tidyverse)
med_mpg <- median(mpg$mpg)
mpg %>%
mutate(mpg01 = ifelse(mpg > med_mpg, 1, 0))
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
library(MASS)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
head(mpg)
mpg <- mpg %>%
mutate(mpg01 = ifelse(mpg > med_mpg, 1, 0))
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
head(mpg)
library(tidyverse)
library(MASS)
# lab 1
mpg <- read.csv("data/data/data/mpg.csv")
train <- read.csv("data/data/data/train.csv")
test <- read.csv("data/data/data/test.csv")
head(mpg)
colSums(is.na(mpg)) # no NAs
med_mpg <- median(mpg$mpg)
mpg <- mpg %>%
mutate(mpg01 = ifelse(mpg > med_mpg, 1, 0))
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
train = (mpg$year % 2 == 0)
test = (mpg$year % 2 != 0)
mpg$year % 2 == 0
mpg$year % 2
mpg$year
mpg$year % 2
10 % 2
10%/%2
11%/%2
10%%2
11%%2
train = (mpg$year %% 2 == 0)
test = (mpg$year %% 2 != 0)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
train
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
mpg[train]
mpg[train,]
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
mpg$cylinders = as.numeric(mpg$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
mpg$cylinders = as.factor(mpg$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
train = mpg[train,]
test = mpg[test,]
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
mpg$cylinders = as.numeric(mpg$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg)
lda.fit
predict(lda.fit, mpg)$class
lda.class <- predict(lda.fit, mpg)$class
table(lda.class, mpg$mpg01)
head(mpg)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train)
train = mpg[train,]
train = (mpg$year %% 2 == 0)
test = (mpg$year %% 2 != 0)
train = mpg[train,]
test = mpg[test,]
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train)
train$cylinders = as.numeric(train$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train)
lda.class <- predict(lda.fit, test)$class
table(lda.class, mpg$mpg01)
table(lda.class, test$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train)
qda.fit <-  qda(mpg01~cylinders+weight+displacement+horsepower, data = train)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
train = (mpg$year %% 2 == 0)
train$cylinders = as.numeric(train$cylinders)
mpg$cylinders = as.numeric(mpg$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
train$cylinders = as.numeric(train$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
qda.fit <-  qda(mpg01~cylinders+weight+displacement+horsepower, data = mpg)
qda.fit <-  qda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
train = mpg[train,]
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
qda.fit <-  qda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
