mpg$cylinders = as.numeric(mpg$cylinders)
train$cylinders = as.numeric(train$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
lda.class <- predict(lda.fit, test)$class
table(lda.class, test$mpg01)
logistic.fit <- glm(mpg01~cylinders+weight+displacement+horsepower, data = mpg)
logistic.pred <- predict(logistic.fit, type="response")
table(logistic.fit, logistic.pred)
head(logistic.pred)
head(logistic.fit)
table(mpg$mpg01, logistic.pred)
?head(logistic.pred)
head(logistic.pred)
head(logistic.pred, 12)
pred <- ifelse(logistic.pred>0.5, 1, 0)
table(mpg$mpg01, pred)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train) # ???
mpg <- mpg %>%
mutate(mpg01 = ifelse(mpg > med_mpg, 1, 0))
train = (mpg$year %% 2 == 0)
test = (mpg$year %% 2 != 0)
train = mpg[train,]
test = mpg[test,]
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train) # ???
head(train, 20)
summary(train)
head(mpg["cylinders"])
head(mpg["cylinders", "weight"])
head(mpg[["cylinders", "weight"]])
head(mpg[c("cylinders", "weight")])
head(mpg[c("cylinders", "weight", "displacement", "horsepower", "mpg01")])
nrow(train)
nrow(test)
train$cylinders = as.numeric(train$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train) # ???
train$cylinders = as.factor(train$cylinders)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train) # ???
train$cylinders = as.factor(train$horsepower)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train) # ???
summary(train)
train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = train) # ???
source('C:/Users/renz/Desktop/SNU/통계적 빅데이터 학습이론/Ch04_classification.R', echo=TRUE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg) # ???
?lda
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
train = (mpg$year %% 2 == 0)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
train
as.numeric(train)
train = index(mpg$year %% 2 == 0)
which(train)
train = which(mpg$year %% 2 == 0)
test = which(mpg$year %% 2 != 0)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg[train,]) # ???
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg[c(train, 100),]) # ???
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg[c(train, 101),]) # ???
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg[c(train, 101, 102, 103),]) # ???
train
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg[c(train, 87, 101, 102, 103),]) # ???
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg]) # ???
lda.class <- predict(lda.fit, mpg[test,])$class
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg) # ???
lda.class <- predict(lda.fit, mpg[test,])$class
table(lda.class, test$mpg01)
table(lda.class, mpg[test,]$mpg01)
qda.fit <-  qda(mpg01~cylinders+weight+displacement+horsepower, data = mpg)
qda.class <- predict(qda.fit, mpg[test,])$class
table(qda.class, mpg[test,]$mpg01)
qda.fit <-  qda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg) # ???
lda.class <- predict(lda.fit, mpg[test,])$class
table(lda.class, mpg[test,]$mpg01)
qda.fit <-  qda(mpg01~weight+displacement+horsepower, data = mpg, subset = train)
qda.class <- predict(qda.fit, mpg[test,])$class
table(qda.class, mpg[test,]$mpg01)
qda.fit <-  qda(mpg01~weight+displacement+horsepower, data = mpg)
trainX = train[,-"mpg01"]
trainX = train[,-mpg01]
trainX = train[,-(mpg01)]
trainX = train[,-("mpg01")]
trainX = train %>%
select(-mpg01)
trainX = train %>%
select(-"mpg01")
trainX = train %>%
select(-c("mpg01"))
trainX = train %>%
select(-c(mpg01))
train
trainX = mpg[train,] %>%
select(-c(mpg01))
trainX = mpg[train,] %>%
select(-mpg01)
trainX = mpg[train,] %>%
select(-"mpg01")
mpg[train,]
trainX = mpg[train,] %>%
select(-mpg01)
trainX = mpg[train,] %>%
head()
trainX
trainX = mpg[train,] %>%
select(-mpg01)
trainXy = mpg[train,]
testXy = mpg[test,]
trainX = trainXy %>%
select(-mpg01)
head(trainX)
head(trainXy)
trainX = trainXy %>%
select(mpg:origin)
nrow(mpg)
?sample
train = mpg[sample.int(300, replace = FALSE)]
train = mpg[sample.int(300, replace = FALSE),]
nrow(train)
?union
test = setdiff(mpg, train)
head(test)
nrow(test)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg) # ???
lda.class <- predict(lda.fit, mpg[test,])$class
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(300, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(320, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(350, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(360, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
nrow(mpg)
train = sample.int(370, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
head(mpg)
train = sample.int(374, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(379, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(385, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(390, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(393, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
train = sample.int(395, replace = FALSE)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
library(tidyverse)
trainX = trainXy %>%
select(mpg:origin)
is.data.frame(trainX)
is.data.frame(trainXy)
trainX = trainXy %>%
select(mpg)
head(trainXy)
library(ISLR)
library(tidyverse)
# lab 1
mpg <- read.csv("data/data/data/mpg.csv")
mpg <- mpg %>%
mutate(mpg01 = ifelse(mpg > med_mpg, 1, 0))
med_mpg <- median(mpg$mpg)
mpg <- mpg %>%
mutate(mpg01 = ifelse(mpg > med_mpg, 1, 0))
train = which(mpg$year %% 2 == 0)
test = which(mpg$year %% 2 != 0)
trainXy = mpg[train,]
testXy = mpg[test,]
trainX = trainXy %>%
select(mpg)
trainX = trainXy %>%
select(-mpg01)
trainy = trainXy %>%
select(mpg01)
testX = testXy %>%
select(-mpg01)
testy = tesetXy %>%
select(mpg01)
testy = testXy %>%
select(mpg01)
library(MASS)
trainX = trainXy %>%
dplyr::select(-mpg01)
knn.pred = knn(trainX, testX, trainy, k = 1)
??knn
library(ISLR)
n
knn.pred = knn(trainX, testX, trainy, k = 1)
library(class)
knn.pred = knn(trainX, testX, trainy, k = 1)
nrow(trainX)
nrow(trainy)
nrow(testX)
summary(trainy)
testy = testXy %>%
dplyr::select(mpg01) %>%
as.factor
testX = testXy %>%
dplyr::select(-mpg01) %>%
as.factor()
testy = testXy %>%
dplyr::select(mpg01) %>%
as.factor()
knn.pred = knn(trainX, testX, trainy, k = 1)
summary(trainy)
trainX = trainXy %>%
dplyr::select(-mpg01)
trainy = trainXy %>%
dplyr::select(mpg01) %>%
as.factor()
testX = testXy %>%
dplyr::select(-mpg01)
testy = testXy %>%
dplyr::select(mpg01) %>%
as.factor()
knn.pred = knn(trainX, testX, trainy, k = 1)
is.na(train)
sum(is.na(train))
knn.pred = knn(trainX, testX, trainy, k = 3)
head(trainy)
head(trainX)
trainy = as.factor(trainy)
trainy = trainXy %>%
dplyr::select(mpg01)
trainy = as.factor(trainy)
testy = as.factor(testy)
testy = testXy %>%
dplyr::select(mpg01)
testy = as.factor(testy)
knn.pred = knn(trainX, testX, trainy, k = 3)
head(trainy)
trainy = trainXy %>%
dplyr::select(mpg01)
trainyty
head(trainy)
tail(trainy)
is.factor(trainy)
trainy = as.factor(trainy)
is.factor(trainy)
head(trainy)
?as.factor
trainy = trainXy %>%
dplyr::select(mpg01)
trainy = as.factor(as.vector(trainy))
head(trainy)
trainy = trainXy %>%
dplyr::select(mpg01)
trainy = as.factor((trainy$mpg01))
head(trainy)
testy = testXy %>%
dplyr::select(mpg01)
testy = as.factor(testy$mpg01)
knn.pred = knn(trainX, testX, trainy, k = 3)
head(testy)
head(trainX)
head(testX)
trainX = trainXy %>%
dplyr::select(-c(name,mpg01))
head(trainX)
testX = testXy %>%
dplyr::select(-c(name, mpg01))
knn.pred = knn(trainX, testX, trainy, k = 3)
summary(trainX)
is.factor(mpg$horsepower)
mpg$horsepower <- as.numeric(mpg$horsepower)
trainX$horsepower <- as.numeric(trainX$horsepower)
knn.pred = knn(trainX, testX, trainy, k = 3)
is.na(trainX)
sum(is.na(trainX))
sum(is.na(testX))
trainX = trainXy %>%
dplyr::select(weight,displacement,horsepower)
head(trainX)
testy = testXy %>%
dplyr::select(weight,displacement,horsepower)
knn.pred = knn(trainX, testX, trainy, k = 3)
testX = testXy %>%
dplyr::select(weight,displacement,horsepower)
testy = testXy %>%
dplyr::select(mpg01)
knn.pred = knn(trainX, testX, trainy, k = 3)
testy = as.factor(testy$mpg01)
knn.pred = knn(trainX, testX, trainy, k = 3)
)
knn.pred = knn(trainX, testX, trainy, k = 3)
trainX
knn.pred
# lab 1
mpg <- read.csv("data/Auto.csv")
library(tidyverse)
colSums(is.na(mpg)) # no NAs
med_mpg <- median(mpg$mpg)
mpg <- mpg %>%
mutate(mpg01 = ifelse(mpg > med_mpg, 1, 0))
train = which(mpg$year %% 2 == 0)
test = which(mpg$year %% 2 != 0)
trainXy = mpg[train,]
testXy = mpg[test,]
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
library(MASS)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~weight+displacement+horsepower, data = mpg, subset = train) # ???
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
train = (mpg$year %% 2 == 0)
test = (mpg$year %% 2 != 0)
# mpg$cylinders = as.numeric(mpg$cylinders)
# train$cylinders = as.factor(train$cylinders)
# train$cylinders = as.factor(train$horsepower)
# train$mpg01 = as.factor(train$mpg01)
lda.fit <- lda(mpg01~cylinders+weight+displacement+horsepower, data = mpg, subset = train) # ???
logistic.fit <- glm(mpg01~cylinders+weight+displacement+horsepower, data = mpg, family = binomial)
logistic.pred <- predict(logistic.fit, type="response")
pred <- ifelse(logistic.pred>0.5, 1, 0)
table(mpg$mpg01, pred)
logistic.fit <- glm(mpg01~cylinders+weight+displacement+horsepower, data = mpg, family = binomial, subset = train)
logistic.pred <- predict(logistic.fit, type="response")
pred <- ifelse(logistic.pred>0.5, 1, 0)
table(mpg$mpg01, pred)
logistic.pred <- predict(logistic.fit, testXy, type="response")
pred <- ifelse(logistic.pred>0.5, 1, 0)
table(mpg$mpg01, pred)
logistic.pred <- predict(logistic.fit, mpg[test,], type="response")
# Lab 2
default <- read.table(read.csv("data/data/default.txt"))
# Lab 2
default <- read.table(read.csv("data/data/data/default.txt"))
# Lab 2
default <- read.table("data/data/data/default.txt")
head(default)
# Lab 2
Default <- read.table("data/data/data/default.txt")
head(Default)
def_glm.fit <- glm(default~income+balance, data = Default, family = binomial)
summary(def_glm.fit)
boot.fn <- function(dat, idx){
my_glm <- glm(default~income+balance, date = dat, family = binomial, subset = idx)
coeff <- coef(my_glm)
return(coeff)
}
library(boot)
boot(Default, 50)
boot(Default, boot.fn, 50)
head(Default)
?boot
boot.fn <- function(dat, idx){
my_glm <- glm(default~income+balance, date = dat, family = binomial, subset = idx)
coeff <- coef(my_glm)
return(coeff)
}
library(boot)
boot(Default, boot.fn, 50)
Default
boot.fn = function(data, index){
return(coef(glm(default ~ income + balance, data = data,
family =binomial, subset = index)))
}
library(boot)
boot(Default, boot.fn, 50)
boot.fn = function(dat, index){
return(coef(glm(default ~ income + balance, data = dat,
family =binomial, subset = index)))
}
library(boot)
boot(Default, boot.fn, 50)
boot.fn = function(dat, indx){
return(coef(glm(default ~ income + balance, data = dat,
family =binomial, subset = indx)))
}
library(boot)
boot(Default, boot.fn, 50)
boot.fn <- function(dat, idx){
my_glm <- glm(default~income+balance, data = dat, family = binomial, subset = idx)
coeff <- coef(my_glm)
return(coeff)
}
library(boot)
boot(Default, boot.fn, 50)
opts_chunk$set(eval=TRUE, cache=TRUE, fig.width=7, fig.height=4)
library(tidyverse)
opts_chunk$set(eval=TRUE, cache=TRUE, fig.width=7, fig.height=4)
library(knitr)
opts_chunk$set(eval=TRUE, cache=TRUE, fig.width=7, fig.height=4)
auto = read.csv("data/Auto.csv", header = T)
head(auto)
auto$horsepower <- as.numeric(auto$horsepower)
head(auto)
library(ISLR)
nrow(auto)
trainIdx = sample(397, 198)
lm.fit <- lm(mpg~horsepower, data = auto, subset=train)
lm.pred <- predict(lm.fit, auto[-train,])
lm.pred
mean((mpg$mpg - lm.pred)^2)
mean((mpg[-train,]$mpg - lm.pred)^2)
